def clasificar_peliculas(edad):
    """
    Devuelve una recomendaci√≥n de clasificaci√≥n de pel√≠culas seg√∫n la edad.

    Clasificaciones:
    - R: Restricted (Restringida) ‚Üí Solo mayores de 17 a√±os o con acompa√±ante adulto.
    - PG-13: Parental Guidance Suggested for under 13 ‚Üí Gu√≠a parental sugerida, no recomendable para menores de 13.
    - G: General Audience ‚Üí Apta para todo p√∫blico.
    - PG: Parental Guidance ‚Üí Algunas escenas pueden no ser aptas para ni√±os peque√±os.
    """
    if edad < 0:
        return "Edad no v√°lida."
    elif edad < 13:
        return "Te recomendamos pel√≠culas clasificadas G o PG."
    elif edad < 18:
        return "Puedes ver pel√≠culas clasificadas PG-13."
    else:
        return "¬°Puedes ver pel√≠culas clasificadas R!"

# ===== Pruebas unitarias =====
assert clasificar_peliculas(20) == "¬°Puedes ver pel√≠culas clasificadas R!", "Error para edad 20"
assert clasificar_peliculas(15) == "Puedes ver pel√≠culas clasificadas PG-13.", "Error para edad 15"
assert clasificar_peliculas(10) == "Te recomendamos pel√≠culas clasificadas G o PG.", "Error para edad 10"
assert clasificar_peliculas(-5) == "Edad no v√°lida.", "Error para edad negativa"

print("‚úÖ Pruebas unitarias superadas.")

# ===== Verificador interactivo de edades =====
while True:
    try:
        edad = int(input("Ingresa tu edad: "))
        resultado = clasificar_peliculas(edad)
        print(f"üìΩÔ∏è {resultado}")
    except ValueError:
        print("‚ö†Ô∏è Debes ingresar un n√∫mero entero v√°lido.")
        continue

    continuar = input("¬øDeseas verificar otra edad? (Y/N): ").strip().lower()
    if continuar != 'y':
        break

print("--- Fin del programa --- Jim Requena")
